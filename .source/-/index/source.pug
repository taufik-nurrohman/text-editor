extends ../_index.pug

block state
  - const title = 'Source \xB7 Text Editor'
  - const scripts = ['../index.min.js', 'history.min.js', 'source.min.js']

block script
  script
    | let editor = new TE(document.querySelector('textarea'), '  ');

block style
  style
    | textarea {
    |   display: block;
    |   box-sizing: border-box;
    |   width: 100%;
    |   height: 20em;
    | }

block content
  main
    p(tabindex='0') Previous tabbable element.
    p: textarea(placeholder!='Code goes here&hellip;' spellcheck='false')
      | node.addEventListener('click', e =&gt; {
      |     fetch(this.href).then(r =&gt; r.json()).then(json =&gt; {
      |         console.log(json);
      |     });
      | });
    p
      label
        input(checked onchange='console.log(editor = this.checked ? new TE(editor.self, \'  \') : editor.pop());' type='checkbox')
        = ' '
        span Enable Source Editor
    h2 Settings
    table(border='1')
      thead
        tr
          th Name
          th Description
      tbody
        tr
          td: code state.tab
          td The default indent character.
        tr
          td: code state.source.close
          td List of token on the left that should be &ldquo;auto-closed&rdquo; by token on the right.
    pre: code
      | let editor = new TE(#[var self], #[var state] = {
      |     tab: '\t',
      |     source: {
      |         close: {
      |             '`': '`',
      |             '(': ')',
      |             '{': '}',
      |             '[': ']',
      |             '"': '"',
      |             "'": "'",
      |             '&lt;': '&gt;'
      |         },
      |         // Custom function to trigger the outdent
      |         pull: e =&gt; {
      |             let key = e.key,
      |                 keyCode = e.keyCode,
      |                 keyIsCtrl = e.ctrlKey,
      |                 keyIsShift = e.shiftKey;
      |             return keyIsCtrl &amp;&amp; !keyIsShift &amp;&amp; ((key &amp;&amp; '[' === key) || (keyCode &amp;&amp; 219 === keyCode));
      |         },
      |         // Custom function to trigger the indent
      |         push: e =&gt; { &hellip; }
      |     }
      | });
